- import_tasks: ../common/tasks/main.yml

- name: install haproxy
  apt: pkg={{ item }} state=present
  with_items:
  - haproxy
  tags:
  - install

- name: Ensure directory exists for ssl
  file:
    path: /etc/haproxy/cert/
    state: directory
  tags:
  - install
  - cert

- name: copy certificate to remote hosts
  copy:
    src: "{{ item.value.ssl_cert_file }}"    
    dest: /etc/haproxy/cert/{{ item.key }}.one
    owner: haproxy
    group: haproxy
    mode: 0644
    backup: yes
  with_dict: "{{ webs | default({}) }}"
  tags:
  - install
  - cert

- name: config haproxy.cfg
  template: 
    src: haproxy.cfg.j2 
    dest: /etc/haproxy/haproxy.cfg
  notify: restart-haproxy
  tags:
  - install
  - config

- name: config syslog 
  replace:
    path: /etc/rsyslog.d/49-haproxy.conf
    regexp: "^if \\$programname startswith 'haproxy' then /var/log/haproxy.log"
    replace: "#if $programname startswith 'haproxy' then /var/log/haproxy.log"
  notify: restart-haproxy
  tags:
  - install

- name: remove haproxy
  apt: pkg={{ item }} state=absent purge=true
  with_items:
  - haproxy
  tags:
  - remove

- name: stop haproxy
  systemd: name=haproxy state=stopped
  tags:
  - stop

- name: start haproxy
  systemd: name=haproxy state=started
  tags:
  - start

- name: restart haproxy
  systemd: name=haproxy state=restarted
  tags:
  - restart


- name: telegraf add haproxy monitoring
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.haproxy]"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { option: "servers", value: ["http://admin:{% if monitor is defined %}{{ monitor.haproxy_passwd | default('admin') }}{% else %}admin{% endif %}@localhost:1936/haproxy?stats"] }
  notify: restart-telegraf
  when: telegraf_conf.stat.exists
  tags:
  - install
  - config

- name: telegraf remove haproxy monitoring
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.haproxy]"
    state: absent
  when: telegraf_conf.stat.exists
  tags:
  - remove

