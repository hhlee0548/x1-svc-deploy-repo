- import_tasks: ../common/tasks/main.yml

- name: remove lock files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - /var/lib/dpkg/updates/*
#  - /var/lib/apt/lists/lock
#  - /var/cache/apt/archives/lock
  - /var/lib/dpkg/lock 
  tags:
  - install
  
- name: install nginx
  apt: pkg={{ item }} state=present
  with_items:
  - nginx
  register: apt_status
  until: apt_status is success
  delay: 5
  retries: 48
  tags:
  - install

- name: config site cfg
  template:
    src: default.j2
    dest: /etc/nginx/sites-enabled/default
  notify: restart-nginx
  tags:
  - install
  - config

- name: config syslog for access_log
  replace:
    path: /etc/nginx/nginx.conf
    regexp: 'access_log /var/log/nginx/access.log;'
    replace: 'access_log syslog:server=unix:/dev/log,nohostname,facility=local7,severity=info combined;'
  notify: restart-nginx
  tags:
  - install

- name: config syslog for error_log
  replace:
    path: /etc/nginx/nginx.conf
    regexp: 'error_log /var/log/nginx/error.log;'
    replace: 'error_log syslog:server=unix:/dev/log,nohostname,facility=local7,severity=error warn;'
  notify: restart-nginx
  tags:
  - install

- name: remove nginx
  apt: pkg={{ item }} state=absent purge=true
  with_items:
  - nginx
  tags:
  - remove

- name: stop nginx
  systemd: name=nginx state=stopped
  tags:
  - stop

- name: start nginx
  systemd: name=nginx state=started
  tags:
  - start

- name: restart nginx
  systemd: name=nginx state=restarted
  tags:
  - restart


- name: telegraf list nginx ports
  set_fact: nginx_urls="{% for k, item in servers.iteritems() %}\"http://localhost:{% set listen = item.listen | string %}{{ listen.split(' ')[0] }}/nginx_status\"{% if not loop.last %},{% endif %}{% endfor %}"
  tags:
  - install
  - config

- name: telegraf add nginx monitoring
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.nginx]"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { option: "urls", value: "[{{ nginx_urls }}]" } 
  notify: restart-telegraf
  when: telegraf_conf.stat.exists
  tags:
  - install
  - config

- name: telegraf remove nginx monitoring
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.nginx]"
    state: absent
  when: telegraf_conf.stat.exists
  tags:
  - remove

