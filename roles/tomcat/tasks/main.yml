- import_tasks: ../common/tasks/main.yml

- name: remove lock files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - /var/lib/dpkg/updates/*
  - /var/lib/apt/lists/lock
  - /var/cache/apt/archives/lock
  - /var/lib/dpkg/lock 
  tags:
  - install

- name: install openjdk
  apt: pkg={{ java_package }} state=present
  register: apt_status
  until: apt_status is success
  delay: 5
  retries: 24
  tags:
  - install

#- name: install tomcat
#  apt: pkg={{ item }} state=latest
#  with_items:
#    - tomcat7
#  tags:
#  - install

- name: load tomcat {{ tomcat_version }} vars
  include_vars: version_{{ tomcat_version }}.yml
  tags:
  - install
  - remove
  - start
  - stop
  - restart
  - config

- name: download tomcat
  get_url: url={{ tomcat_download_url }} dest=/tmp/{{ tomcat_version_dir }}.tar.gz
  tags:
  - install

- name: create tomcat directory 
  file:
    path: /usr/local/tomcat/{{ tomcat_version_dir }}
    state: directory
  tags:
  - install

- name: extract archive
  unarchive:
    copy: no
    src: /tmp/{{ tomcat_version_dir }}.tar.gz
    dest: /usr/local/tomcat/{{ tomcat_version_dir }}
    extra_opts: [--strip-components=1]
  tags:
  - install


- name: add group "tomcat"
  group: name=tomcat
  tags:
  - install

- name: add user "tomcat"
  user: name=tomcat group=tomcat home=/usr/local/tomcat createhome=no
  tags:
  - install


- name: set tomcat directory permissions
  file: path=/usr/local/tomcat/{{ tomcat_version_dir }} owner=tomcat group=tomcat state=directory recurse=yes
  tags:
  - install

#- name: install tomcat init script
#  copy: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755
#  tags:
#  - install

- name: install tomcat init script
  template: 
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service 
  tags:
  - install

- name: enable tomcat service 
  become: true
  systemd:
    daemon_reload: yes
    name: tomcat
    enabled: yes
  tags:
  - install

## rsyslog start

- name: enable rsyslog module
  replace:
    path: /etc/rsyslog.conf
    regexp: '^#module\(load="imtcp"\)$'
    replace: 'module(load="imtcp")'
  tags:
  - install

- name: enable rsyslog input
  replace:
    path: /etc/rsyslog.conf
    regexp: '#input\(type="imtcp" port="514"\)'
    replace: 'input(type="imtcp" address="127.0.0.1" port="514")'
  notify: restart-rsyslog
  tags:
  - install

- name: install tomcat syslog lib
  copy: src=agafua-syslog-0.3.jar dest=/usr/local/tomcat/{{ tomcat_version_dir }}/lib/
  tags:
  - install

- name: set tomcat syslog lib to classpath
  template: 
    src: setenv.sh.j2
    dest: /usr/local/tomcat/{{ tomcat_version_dir }}/bin/setenv.sh
  tags:
  - install

- name: config tomcat syslog
  template: 
    src: logging.properties_{{ tomcat_version }}.j2
    dest: /usr/local/tomcat/{{ tomcat_version_dir }}/conf/logging.properties
  notify: restart-tomcat
  tags:
  - install

## rsyslog end


- name: config tomcat server
  replace:
    path: /usr/local/tomcat/{{ tomcat_version_dir }}/conf/server.xml
    regexp: '8080'
    replace: '{{ http_port }}'
  notify: restart-tomcat
  tags:
  - install
  - config

- name: config tomcat user
  template: 
    src: tomcat-users.xml_{{ tomcat_version }}.j2
    dest: /usr/local/tomcat/{{ tomcat_version_dir }}/conf/tomcat-users.xml
  notify: restart-tomcat
  tags:
  - install
  - config

- name: start tomcat
  become: true
  systemd: name=tomcat state=stopped 
  tags:
  - start


- name: stop tomcat
  become: true
  systemd: name=tomcat state=stopped 
  tags:
  - stop
  - remove

- name: remove tomcat
  file: path=/usr/local/tomcat/{{ tomcat_version_dir }} state=absent
  tags:
  - remove

- name: remove tomcat user
  user: name=tomcat state=absent
  tags:
  - remove

- name: remove tomcat group
  group: name=tomcat state=absent
  tags:
  - remove

- name: start tomcat
  become: true
  systemd: name=tomcat state=started
  tags:
  - start

- name: restart tomcat
  become: true
  systemd: name=tomcat state=restarted
  tags:
  - restart


- name: telegraf add tomcat monitoring
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.tomcat]"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { option: "url", value: "http://localhost:{{ http_port }}/manager/status/all?XML=true" }
    - { option: "username", value: "{{ admin_username }}" }
    - { option: "password", value: "{{ admin_password }}" }
  notify: restart-telegraf
  when: telegraf_conf.stat.exists
  tags:
  - install
  - config

- name: telegraf remove tomcat monitoring
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.tomcat]"
    state: absent
  when: telegraf_conf.stat.exists
  tags:
  - remove

